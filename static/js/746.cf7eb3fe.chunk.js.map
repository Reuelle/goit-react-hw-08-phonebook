{"version":3,"file":"static/js/746.cf7eb3fe.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","redux/selector.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/operation';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          value={number}\n          onChange={(e) => setNumber(e.target.value)}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","\nexport const selectContacts = state => state.contacts?.items || [];\nexport const selectFilter = state => state.filter || '';\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const selectIsLoading = state => state.contacts?.isLoading || false;\nexport const selectError = state => state.contacts?.error || null;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/operation'; // Ensure this matches the export from your slice file\nimport PropTypes from 'prop-types';\nimport css from '../ContactList/ContactList.module.css';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <div>\n      <span>\n        {contact.name}: <span>{contact.number}</span>\n      </span>\n      <button\n        type=\"button\"\n        className={css.contactListItemBtn}\n        onClick={handleDelete}\n      >\n        delete\n      </button>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","// src/components/ContactList/ContactList.jsx\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selector';\nimport { Contact } from 'components/Contact/Contact';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  if (!contacts) {\n    return null;\n  }\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {visibleContacts.map((contact) => (\n          <li key={contact.id} className={css.contactListItem}>\n            <Contact contact={contact} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList; // Ensure this is a default export\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterName\":\"Filter_filterName__Y2kKA\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/slice/filter';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    e.preventDefault();\n    const name = e.target.value;\n    dispatch(setFilter(name));\n  };\n\n  return (\n    <div>\n      <label className={css.filterLabel}>Find contacts by Name </label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        placeholder=\"Enter name\"\n        onChange={handleChange}\n        name=\"name\"\n        autoComplete=\"off\"\n      />\n    </div>\n  );\n};\nexport default Filter;\n","\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\nimport ContactList from '../../components/ContactList/ContactList'; // Default import\r\nimport Filter from '../../components/Filter/Filter';\r\n\r\nfunction Contacts() {\r\n  return (\r\n    <>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <title>PhonebookðŸ“±</title>\r\n        </Helmet>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </HelmetProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","addContact","children","_jsx","type","value","onChange","target","selectContacts","state","_state$contacts","contacts","items","selectFilter","filter","Contact","_ref","contact","className","css","onClick","deleteContact","id","useSelector","visibleContacts","toLowerCase","includes","map","placeholder","setFilter","autoComplete","_Fragment","HelmetProvider","Helmet","ContactForm","Filter","ContactList"],"sourceRoot":""}