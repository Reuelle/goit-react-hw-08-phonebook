{"version":3,"file":"static/js/953.074b517a.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selector.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/slice/contact';\nimport { selectContacts } from 'redux/selector';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value.trim();\n    form.reset();\n    \n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.formLabel}>Name</label>\n      <input\n        className={css.formName}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я\\s'-]+$\"\n        title=\"Name may contain only letters, apostrophe, dash, and spaces.\"\n        required\n        placeholder=\"Enter name\"\n      />\n      <label className={css.formLabel}>Number</label>\n      <input\n        className={css.formNumber}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses, and can start with +.\"\n        required\n        placeholder=\"Enter phone number\"\n      />\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/slice/contact'; // Ensure this matches the export from your slice file\nimport PropTypes from 'prop-types';\nimport css from '../ContactList/ContactList.module.css';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <div>\n      <span>\n        {contact.name}: <span>{contact.number}</span>\n      </span>\n      <button\n        type=\"button\"\n        className={css.contactListItemBtn}\n        onClick={handleDelete}\n      >\n        delete\n      </button>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from '../../redux/selector';\nimport { Contact } from '../Contact/Contact';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  if (!contacts) {\n    return null;\n  }\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {visibleContacts.map((contact) => (\n          <li key={contact.id} className={css.contactListItem}>\n            <Contact contact={contact} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList; // Ensure this is a default export\n","// If `css` is not used in your component, remove the import:\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/slice/filter'; // Adjust the path if needed\nimport { selectContacts, selectFilter } from '../../redux/selector'; // Adjust the path if needed\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts) || [];\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value.trim()));\n  };\n\n  return contacts.length < 1 ? (\n    <h2>Add your first contact</h2>\n  ) : (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Search by name\"\n      value={filter}\n      onChange={handleFilterChange}\n    />\n  );\n}\n\nexport default Filter;\n","\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\r\nimport ContactList from '../../components/ContactList/ContactList'; // Default import\r\nimport Filter from '../../components/Filter/Filter';\r\n\r\nfunction Contacts() {\r\n  return (\r\n    <>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <title>Phonebook📱</title>\r\n        </Helmet>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </HelmetProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","_ref","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","_jsxs","className","css","onSubmit","e","preventDefault","form","target","elements","trim","number","reset","contact","alert","addContact","autoComplete","children","_jsx","type","pattern","title","required","placeholder","Contact","onClick","deleteContact","id","visibleContacts","onChange","event","setFilter","_Fragment","HelmetProvider","Helmet","Filter","ContactList"],"sourceRoot":""}